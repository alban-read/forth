
## ARM fun

It is fun that the FORTH next macro on an ARM32 processor is only one instruction.

ldr pc, [ ip ], # 4

## Package this

To zip this package for redistribution on RISCOS

zip wf/zip !WimpForth -r

## Caret handling

RISC OS window focus works around gaining the CARET; which is also used to display an input sprite.

This seemed to change in 5.28 so I am now faking a text cursor in the edit window.

## Recent assembler instructions

The assembler PASM supports integer instructions mainly from the ARM2 in the Archimedes.

Some new ARM processors support integer divide instructions in hardware.

I have added these as udiv and sdiv to the assembler along with u/ and s/ for unsigned and signed division.

These are around 4-5 times faster than the standard / which is defined in software using shifts and subtracts and also does a lot more checking of parameters.

## Editor support

Added editor support to invoke StrongED on a file or word.

Added some benchmarks to benchmark the interpreter.
These incidentally confirm that the A72 in the overclocked PI 400 is fast.

## RPC Emu

Added a build script (makerpcemu) for users of RPCEmu.

Fixed an issue with the ErrorBox test routine, that could crash the app.

## Code Cache fix

Made a cache sync change that speeds up compilation of files; recall that FORTH compiles code into its dictionary.  
This means the ARM code cache needs to be synced with the ARM data cache.
An update happens every time a FORTH word is added; words are small; and words are only added to the end of the dictionary.
So the update region is now set to the 8K below the dictionary pointer.
Speed increase for fload meta on PI400 is massive going from 00.06.090 to 00.00.07 (from six seconds to essentially instant.)
For RPC EMU which emulates a RISC PC (on a PC or MAC) commenting out syncCode completely is an option.

## New instructions

Added hardware division (sdiv and udiv) instructions to the assembler (PASM); added s/ and u/ words to use these new instructions.
These instructions are not available on older ARM systems; all the older subtract and shift division words remain untouched.
s/ is 4-5 times faster than /.
These are illegal instructions and will certainly crash on older hardware including RPCEmu.

## Caret faking work around

Added orange coloured cursor to the edit window, handle caret events, avoid drawing on other peoples windows, fixed bug that sometimes stopped the icon from displaying in the icon bar.



